#!/bin/bash

# macOS Setup Script
# ==================
#
# References
# ----------
# - https://github.com/mathiasbynens/dotfiles/blob/main/.macos


set -eufo pipefail


cleanup() {
	# Close affected applications to apply changes
	for app in \
		"Activity Monitor" \
		"Address Book" \
		"Calendar" \
		"cfprefsd" \
		"Contacts" \
		"Dock" \
		"Finder" \
		"Google Chrome Canary" \
		"Google Chrome" \
		"Mail" \
		"Messages" \
		"Opera" \
		"Photos" \
		"Safari" \
		"SizeUp" \
		"Spectacle" \
		"SystemUIServer" \
		"Terminal" \
		"Transmission" \
		"Tweetbot" \
		"Twitter" \
		"iCal"
	do
		killall "${app}" &> /dev/null
	done
}


# Close any open System Preferences panes to prevent them from overriding
# settings weâ€™re about to change.
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

# Make sure cleanup function is run on exit
trap cleanup EXIT


# Non `defaults` settings
# =========================

# Disable the sound effects on boot
sudo nvram SystemAudioVolume=" "

# Show the ~/Library folder
chflags nohidden ~/Library && xattr -d com.apple.FinderInfo ~/Library

# Show the /Volumes folder
sudo chflags nohidden /Volumes


# macOS System Preferences
# ========================
# Read system preferences from $.macos.defaults and apply them using `defaults write`
{{ if and (index . "macos") (index .macos "defaults") -}}
{{- range $domain, $entry := .macos.defaults -}}
{{- range $key, $setting := $entry.setting -}}
{{ if and (index $setting "sudo") ($setting.sudo) }}sudo {{ end }}defaults write {{ $domain }} {{ $key }} {{ if (index $setting "type") }}-{{ $setting.type }}{{ else }}-string{{ end }} {{ if kindIs "map" $setting.value -}}
{{- range $k, $v := $setting.value }}{{ $k }} {{ $v | quote }} {{ end }}
{{ else if kindIs "slice" $setting.value }}
{{- range $i, $v := .value }}{{ $v | quote }} {{ end }}
{{ else }}
{{- $setting.value | quote }}
{{ end }}
{{- end }}
{{- end }}
{{- else }}
echo "No macOS system preferences found in the configuration; skipping."
{{- end }}


# macOS Dock Configurations
# =========================
#
# References
# ----------
# - https://github.com/kcrawford/dockutil
# - https://github.dev/twpayne/dotfiles/blob/master/home/.chezmoiscripts/linux/run_onchange_before_install-packages.sh.tmpl

declare -a remove_labels=(
	Launchpad
	Safari
	Messages
	Mail
	Maps
	Photos
	FaceTime
	Contacts
	Reminders
	Notes
	Freeform
	TV
	Music
	Keynote
	Numbers
	Pages
	"App Store"
)

for label in "${remove_labels[@]}"; do
	dockutil --no-restart --remove "${label}" || true
done
